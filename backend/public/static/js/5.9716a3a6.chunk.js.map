{"version":3,"sources":["shared/components/UIElements/Card.js","shared/hooks/form-hook.js","shared/components/FormElements/imageUpload.js","places/pages/NewPlace.js"],"names":["Card","props","React","createElement","className","concat","style","children","formReducer","state","action","type","formIsValid","inputId","inputs","isValid","value","useForm","initialInputs","initialFormValidity","formState","dispatch","useReducer","useCallback","id","inputData","formValidity","ImageUpload","file","setFile","useState","previewUrl","setPreviewUrl","isVaild","setIsvalid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","display","ref","accept","onChange","event","pickedFile","fileIsValid","target","files","length","onInput","center","src","alt","Button","onClick","pickImageHandler","current","click","errorText","NewPlace","auth","useContext","AuthContext","isLoading","error","sendRequest","clearError","useHttpClient","inputHandler","title","description","address","image","history","useHistory","LoadingSpinner","message","Fragment","ErrorModal","onClear","onSubmit","async","preventDefault","formData","FormData","append","process","Authorization","token","push","userId","err","asOverlay","Input","element","label","validators","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","disabled"],"mappings":"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","file":"static/js/5.9716a3a6.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import { useCallback, useReducer } from \"react\";\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n        isValid: formIsValid,\n      };\n    case \"SET_DATA\":\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity,\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: \"INPUT_CHANGE\",\n      value: value,\n      isValid: isValid,\n      inputId: id,\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: \"SET_DATA\",\n      inputs: inputData,\n      formIsValid: formValidity,\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};\n","import React, { useRef, useState, useEffect } from \"react\";\nimport \"./imageUpload.css\";\nimport Button from \"./Button\";\n\nconst ImageUpload = (props) => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isVaild, setIsvalid] = useState(false);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickHandler = (event) => {\n    let pickedFile;\n    let fileIsValid = isVaild;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsvalid(true);\n      fileIsValid = true;\n    } else {\n      setIsvalid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"from-control\">\n      <input\n        type=\"file\"\n        id={props.id}\n        style={{ display: \"none\" }}\n        ref={filePickerRef}\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickHandler}\n      />\n\n      <div className={`image-upload ${props.center && \"center\"}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>Please Pick an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n      {!isVaild && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ImageUpload from \"../../shared/components/FormElements/imageUpload\";\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH,\n} from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport \"./PlaceForm.css\";\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: \"\",\n        isValid: false,\n      },\n      description: {\n        value: \"\",\n        isValid: false,\n      },\n      address: {\n        value: \"\",\n        isValid: false,\n      },\n      image: {\n        value: null,\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const history = useHistory();\n\n  const placeSubmitHandler = async (event) => {\n    event.preventDefault();\n\n    const formData = new FormData();\n    formData.append(\"title\", formState.inputs.title.value);\n    formData.append(\"description\", formState.inputs.description.value);\n    formData.append(\"address\", formState.inputs.address.value);\n    formData.append(\"image\", formState.inputs.image.value);\n    try {\n      await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + \"/places\",\n        \"POST\",\n        formData,\n        {\n          Authorization: \"Bearer \" + auth.token,\n        }\n      );\n\n      history.push(`/${auth.userId}/places`);\n    } catch (err) {}\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"center\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error && error.message !== \"Could not find place\") {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>Error occurred!</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <p className=\"newPlace-description\">\n        Capture the Journey: Share Your Travel Moment with Image, Title, and\n        Description!\n      </p>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(6)]}\n          errorText=\"Please enter a valid description (at least 5 characters).\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"address\"\n          element=\"input\"\n          label=\"Address\"\n          validators={[VALIDATOR_REQUIRE(6)]}\n          errorText=\"Please enter a valid address.\"\n          onInput={inputHandler}\n        />\n        <ImageUpload\n          center\n          id=\"image\"\n          onInput={inputHandler}\n          errorText=\"Please provide an image.\"\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          ADD PLACE\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewPlace;\n"],"sourceRoot":""}