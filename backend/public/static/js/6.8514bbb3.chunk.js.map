{"version":3,"sources":["shared/components/UIElements/Card.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js"],"names":["Card","props","React","createElement","className","concat","style","children","PlaceItem","isLoading","error","sendRequest","clearError","useHttpClient","auth","useContext","AuthContext","showMap","setShowMap","useState","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","Fragment","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","Map","center","coordinates","zoom","inverse","danger","async","process","id","Authorization","token","onDelete","err","LoadingSpinner","asOverlay","src","image","alt","title","description","openMapHandler","userId","creatorId","to","showDeleteWarningHandler","PlaceList","items","length","map","place","key","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","useEffect","responseData","places","fetchPlaces","deletedPlaceId","prevPlaces","filter"],"mappings":"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","file":"static/js/6.8514bbb3.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useState, useContext } from \"react\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Modal from \"../../shared/components/UIElements/Modal\";\nimport Map from \"../../shared/components/UIElements/Map\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport \"./PlaceItem.css\";\n\nconst PlaceItem = (props) => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const auth = useContext(AuthContext);\n  const [showMap, setShowMap] = useState(false);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const openMapHandler = () => setShowMap(true);\n\n  const closeMapHandler = () => setShowMap(false);\n\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  const confirmDeleteHandler = async () => {\n    setShowConfirmModal(false);\n    try {\n      await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + `/places/${props.id}`,\n        \"DELETE\",\n        null,\n        {\n          Authorization: \"Bearer \" + auth.token,\n        }\n      );\n      props.onDelete(props.id);\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Modal\n        show={showMap}\n        onCancel={closeMapHandler}\n        header={props.address}\n        contentClass=\"place-item__modal-content\"\n        footerClass=\"place-item__modal-actions\"\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\n      >\n        <div className=\"map-container\">\n          <Map center={props.coordinates} zoom={16} />\n        </div>\n      </Modal>\n      <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        header=\"Are you sure?\"\n        footerClass=\"place-item__modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button inverse onClick={cancelDeleteHandler}>\n              CANCEL\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              DELETE\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <p>\n          Do you want to proceed and delete this place? Please note that it\n          can't be undone thereafter.\n        </p>\n      </Modal>\n      <li className=\"place-item\">\n        <Card className=\"place-item__content\">\n          {isLoading && <LoadingSpinner asOverlay />}\n          <div className=\"place-item__image\">\n            <img\n              src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\n              alt={props.title}\n            />\n          </div>\n          <div className=\"place-item__info\">\n            <h2>{props.title}</h2>\n            <h3>{props.address}</h3>\n            <p>{props.description}</p>\n          </div>\n          <div className=\"place-item__actions\">\n            <Button inverse onClick={openMapHandler}>\n              VIEW ON MAP\n            </Button>\n            {auth.userId === props.creatorId && (\n              <Button to={`/places/${props.id}`}>EDIT</Button>\n            )}\n\n            {auth.userId === props.creatorId && (\n              <Button danger onClick={showDeleteWarningHandler}>\n                DELETE\n              </Button>\n            )}\n          </div>\n        </Card>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default PlaceItem;\n","import React from \"react\";\n\nimport Card from \"../../shared/components/UIElements/Card\";\nimport PlaceItem from \"./PlaceItem\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport \"./PlaceList.css\";\n\nconst PlaceList = (props) => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"place-list center\">\n        <Card>\n          <h2>No places found. Maybe create one?</h2>\n          <Button to=\"/places/new\">Share Place</Button>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"place-list\">\n      {props.items.map((place) => (\n        <PlaceItem\n          key={place.id}\n          id={place.id}\n          image={place.image}\n          title={place.title}\n          description={place.description}\n          address={place.address}\n          creatorId={place.creator}\n          coordinates={place.location}\n          onDelete={props.onDeletePlace}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default PlaceList;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport PlaceList from \"../components/PlaceList\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nconst UserPlaces = () => {\n  const [loadedPlaces, setLoadedPlaces] = useState();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const userId = useParams().userId;\n\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\n        );\n        setLoadedPlaces(responseData.places);\n      } catch (err) {}\n    };\n    fetchPlaces();\n  }, [sendRequest, userId]);\n\n  const placeDeletedHandler = (deletedPlaceId) => {\n    setLoadedPlaces((prevPlaces) =>\n      prevPlaces.filter((place) => place.id !== deletedPlaceId)\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedPlaces && (\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UserPlaces;\n"],"sourceRoot":""}