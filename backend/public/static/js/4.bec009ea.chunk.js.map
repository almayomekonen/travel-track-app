{"version":3,"sources":["shared/components/UIElements/Card.js","shared/components/UIElements/Avatar.js","user/components/UserItem.js","user/components/UsersList.js","user/pages/Users.js"],"names":["Card","props","React","createElement","className","concat","style","children","Avatar","src","image","alt","width","height","UserItem","Link","to","id","process","name","placeCount","UsersList","items","length","map","user","key","places","Users","isLoading","error","sendRequest","clearError","useHttpClient","loadedUsers","setLoadedUsers","useState","useEffect","async","responseData","users","err","fetchUsers","Fragment","ErrorModal","onClear","LoadingSpinner"],"mappings":"qGAAA,0BAYeA,IARFC,GAETC,IAAAC,cAAA,OAAKC,UAAS,QAAAC,OAAUJ,EAAMG,WAAaE,MAAOL,EAAMK,OACrDL,EAAMM,W,4JCSEC,MAZAP,GAEXC,IAAAC,cAAA,OAAKC,UAAS,UAAAC,OAAYJ,EAAMG,WAAaE,MAAOL,EAAMK,OACxDJ,IAAAC,cAAA,OACEM,IAAKR,EAAMS,MACXC,IAAKV,EAAMU,IACXL,MAAO,CAAEM,MAAOX,EAAMW,MAAOC,OAAQZ,EAAMW,U,cCmBpCE,MAvBGb,GAEdC,IAAAC,cAAA,MAAIC,UAAU,aACZF,IAAAC,cAACH,IAAI,CAACI,UAAU,sBACdF,IAAAC,cAACY,IAAI,CAACC,GAAE,IAAAX,OAAMJ,EAAMgB,GAAE,YACpBf,IAAAC,cAAA,OAAKC,UAAU,oBACbF,IAAAC,cAACK,EAAM,CACLE,MAAK,GAAAL,OAAKa,uDAA+B,KAAAb,OAAIJ,EAAMS,OACnDC,IAAKV,EAAMkB,QAGfjB,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAAA,UAAKF,EAAMkB,MACXjB,IAAAC,cAAA,UACGF,EAAMmB,WAAW,IAAuB,IAArBnB,EAAMmB,WAAmB,QAAU,c,MCWtDC,MA1BIpB,GACU,IAAvBA,EAAMqB,MAAMC,OAEZrB,IAAAC,cAAA,OAAKC,UAAU,UACbF,IAAAC,cAACH,IAAI,KACHE,IAAAC,cAAA,UAAI,qBAOVD,IAAAC,cAAA,MAAIC,UAAU,cACXH,EAAMqB,MAAME,IAAKC,GAChBvB,IAAAC,cAACW,EAAQ,CACPY,IAAKD,EAAKR,GACVA,GAAIQ,EAAKR,GACTP,MAAOe,EAAKf,MACZS,KAAMM,EAAKN,KACXC,WAAYK,EAAKE,OAAOJ,W,wBCanBK,UA9BDA,KACZ,MAAM,UAAEC,EAAS,MAAEC,EAAK,YAAEC,EAAW,WAAEC,GAAeC,eAC/CC,EAAaC,GAAkBC,qBAetC,OAbAC,oBAAU,KACWC,WACjB,IACE,MAAMC,QAAqBR,EACzBb,iEAGFiB,EAAeI,EAAaC,OAC5B,MAAOC,MAEXC,IACC,CAACX,IAGF7B,IAAAC,cAACD,IAAMyC,SAAQ,KACbzC,IAAAC,cAACyC,IAAU,CAACd,MAAOA,EAAOe,QAASb,IAClCH,GACC3B,IAAAC,cAAA,OAAKC,UAAU,UACbF,IAAAC,cAAC2C,IAAc,QAGjBjB,GAAaK,GAAehC,IAAAC,cAACkB,EAAS,CAACC,MAAOY","file":"static/js/4.bec009ea.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Avatar from \"../../shared/components/UIElements/Avatar\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport \"./UserItem.css\";\n\nconst UserItem = (props) => {\n  return (\n    <li className=\"user-item\">\n      <Card className=\"user-item__content\">\n        <Link to={`/${props.id}/places`}>\n          <div className=\"user-item__image\">\n            <Avatar\n              image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\n              alt={props.name}\n            />\n          </div>\n          <div className=\"user-item__info\">\n            <h2>{props.name}</h2>\n            <h3>\n              {props.placeCount} {props.placeCount === 1 ? \"Place\" : \"Places\"}\n            </h3>\n          </div>\n        </Link>\n      </Card>\n    </li>\n  );\n};\n\nexport default UserItem;\n","import React from \"react\";\nimport UserItem from \"./UserItem\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport \"./UsersList.css\";\n\nconst UsersList = (props) => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>No users found.</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"users-list\">\n      {props.items.map((user) => (\n        <UserItem\n          key={user.id}\n          id={user.id}\n          image={user.image}\n          name={user.name}\n          placeCount={user.places.length}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default UsersList;\n","import React, { useEffect, useState } from \"react\";\n\nimport UsersList from \"../components/UsersList\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nconst Users = () => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedUsers, setLoadedUsers] = useState();\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + \"/users\"\n        );\n\n        setLoadedUsers(responseData.users);\n      } catch (err) {}\n    };\n    fetchUsers();\n  }, [sendRequest]);\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\n    </React.Fragment>\n  );\n};\n\nexport default Users;\n"],"sourceRoot":""}